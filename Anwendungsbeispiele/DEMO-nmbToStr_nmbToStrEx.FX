# ******************************************************************************************************
# Demo-Script: nmbToStrig()/nmbToStrigEx() Formatieren von Zahlen
# 
# Kunde:     Opacc Software AG
# 
# Autor:     OPACC Software AG, Rothenburg - Roman Vonwil
# 
# ******************************************************************************************************
/headerreport
«/Demo.CreateHeader»
«/Demo.nmbToStr»
«/Demo.nmbToStrEx»
/

/Demo.CreateHeader
«
{
	XFAS.AddHeads('command','format','output')
}
»

/Demo.nmbToStr
«
{

	XFAS.AddCell("// Kein Format angegeben: Alle Stellen, Standard-Delimiter '.' und keine Gruppierung")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, "")')  
	XFAS.AddCell("''")
	XFAS.AddCell(nmbToStr(0.0, "")) 
	XFAS.AddCell('nmbToStr(12345.67890, "")') 
	XFAS.AddCell("''") 
	XFAS.AddCell(nmbToStr(12345.67890, "")) 
	XFAS.AddCell('nmbToStr(-12345.67890, "")') 
	XFAS.AddCell("''")
	XFAS.AddCell(nmbToStr(-12345.67890, "")) 
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Komma als Dezimal-Trennzeichen:")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, ",")')
	XFAS.AddCell("','")  
	XFAS.AddCell(nmbToStr(0.0, ","))
	XFAS.AddCell('nmbToStr(123456.789, ",")')
	XFAS.AddCell("','")  
	XFAS.AddCell(nmbToStr(123456.789, ","))
	XFAS.AddCell('nmbToStr(-123456.789, ",")')
	XFAS.AddCell("','")  
	XFAS.AddCell(nmbToStr(-123456.789, ","))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Komma als Dezimal-Trennzeichen:")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, ",")')
	XFAS.AddCell("','")
	XFAS.AddCell(nmbToStr(0.0, ","))
	XFAS.AddCell('nmbToStr(123456.789, ",")') 
	XFAS.AddCell("','")
	XFAS.AddCell(nmbToStr(123456.789, ",")) 
	XFAS.AddCell('nmbToStr(-123456.789, ",")') 
	XFAS.AddCell("','")
	XFAS.AddCell(nmbToStr(-123456.789, ",")) 	
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Nur (minimale Anzahl) Vorkommastellen erwünscht (man beachte, dass gerundet wird)")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, "8")')
	XFAS.AddCells('"8"')
	XFAS.AddCell(nmbToStr(0.0, "8"))
	XFAS.AddCell('nmbToStr(123456.789, "8")')
	XFAS.AddCells('"8"')
	XFAS.AddCell(nmbToStr(123456.789, "8"))
	XFAS.AddCell('nmbToStr(-123456.789, "8")')
	XFAS.AddCells('"8"')
	XFAS.AddCell(nmbToStr(-123456.789, "8"))
	XFAS.AddCell('nmbToStr(123456.789, "4")')
	XFAS.AddCells('"4"')
	XFAS.AddCell(nmbToStr(123456.789, "4"))
	XFAS.AddCell('nmbToStr(-123456.789, "4")')
	XFAS.AddCells('"4"')
	XFAS.AddCell(nmbToStr(-123456.789, "4"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Nur (minimale Anzahl) Vorkommastellen erwünscht (Definition von Dezimal-Trennzeichen ist unnötig/wirkungslos mit Angabe von 0 Nachkommastellen)")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, "8,0")')
	XFAS.AddCells('"8,0"')
	XFAS.AddCell(nmbToStr(0.0, "8,0"))
	XFAS.AddCell('nmbToStr(123456.789, "8,0")')
	XFAS.AddCells('"8,0"')
	XFAS.AddCell(nmbToStr(123456.789, "8,0"))
	XFAS.AddCell('nmbToStr(-123456.789, "8,0")')
	XFAS.AddCells('"8,0"')
	XFAS.AddCell(nmbToStr(-123456.789, "8,0"))
	XFAS.AddCell('nmbToStr(123456.789, "4,0")')
	XFAS.AddCells('"4,0"')
	XFAS.AddCell(nmbToStr(123456.789, "4,0"))
	XFAS.AddCell('nmbToStr(-123456.789, "4,0")')
	XFAS.AddCells('"4,0"')
	XFAS.AddCell(nmbToStr(-123456.789, "4,0"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Keine Nachkommastellen erwünscht (egal welches Dezimal-Trennzeichen verwendet wird)")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, ".0")')
	XFAS.AddCell('".0"')
	XFAS.AddCell(nmbToStr(0.0, ".0"))
	XFAS.AddCell('nmbToStr(123456.789, ".0")')
	XFAS.AddCell('".0"')
	XFAS.AddCell(nmbToStr(123456.789, ".0"))
	XFAS.AddCell('nmbToStr(-123456.789, ".0")')
	XFAS.AddCell('".0"')
	XFAS.AddCell(nmbToStr(-123456.789, ".0"))
	XFAS.AddCell('nmbToStr(123456.789, ",0")')
	XFAS.AddCell('",0"')
	XFAS.AddCell(nmbToStr(123456.789, ",0"))
	XFAS.AddCell('nmbToStr(-123456.789, ",0")')
	XFAS.AddCell('",0"')
	XFAS.AddCell(nmbToStr(-123456.789, ",0"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Minimale Anzahl Vorkommastellen und Dezimal-Trennzeichen definiert")
	XFAS.AddCells('','')

	XFAS.AddCell('nmbToStr(0.0, "8,")') 
	XFAS.AddCell('"8,0"')
	XFAS.AddCell(nmbToStr(0.0, "8,")) 
	XFAS.AddCell('nmbToStr(-123456.789, "8,")') 
	XFAS.AddCell('"8,"')
	XFAS.AddCell(nmbToStr(-123456.789, "8,")) 
	XFAS.AddCell('nmbToStr(123456.789, "4,")') 
	XFAS.AddCell('"4,"')
	XFAS.AddCell(nmbToStr(123456.789, "4,")) 
	XFAS.AddCell('nmbToStr(-123456.789, "4,")')
	XFAS.AddCell('"4,"')
	XFAS.AddCell(nmbToStr(-123456.789, "4,"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Tausender-Trennzeichen ' (Spezifikation nur möglich, wenn auch Dezimal-Trennzeichen übergeben angegeben wird)")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, ",\'")')
	XFAS.AddCell("\",\'\"")
	XFAS.AddCell(nmbToStr(0.0, ",'"))
	XFAS.AddCell('nmbToStr(123456.789, ",\'")')
	XFAS.AddCell("\",\'\"")
	XFAS.AddCell(nmbToStr(123456.789, ",\'"))
	XFAS.AddCell('nmbToStr(-123456.789, ",\'")')
	XFAS.AddCell("\",\'\"")
	XFAS.AddCell(nmbToStr(-123456.789, ",\'"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// 4 Nachkommastellen mit Tausender-Trennzeichen '")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, ",4\'")')
	XFAS.AddCell("\",4\'\"")
	XFAS.AddCell(nmbToStr(0.0, ",4'"))
	XFAS.AddCell('nmbToStr(123456.789, ",4\'")')
	XFAS.AddCell("\",4\'\"")
	XFAS.AddCell(nmbToStr(123456.789, ",4'"))
	XFAS.AddCell('nmbToStr(-123456.789, ",4\'")')
	XFAS.AddCell("\",4\'\"")
	XFAS.AddCell(nmbToStr(-123456.789, ",4\'"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// 8 Vorkomma- und 2 Nachkommastellen (man beachte, dass gerundet wird)")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, "8.2")')
	XFAS.AddCell('"8.2"')
	XFAS.AddCell(nmbToStr(0.0, "8.2"))
	XFAS.AddCell('nmbToStr(123456.789, "8.2")')
	XFAS.AddCell('"8.2"')
	XFAS.AddCell(nmbToStr(123456.789, "8.2"))
	XFAS.AddCell('nmbToStr(-123456.789, "8.2")')
	XFAS.AddCell('"8.2"')
	XFAS.AddCell(nmbToStr(-123456.789, "8.2"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// 8 Vorkomma- und 2 Nachkommastellen mit Tausender-Trennzeichen '")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, "8,2\'")')
	XFAS.AddCell('"8.2\'"')
	XFAS.AddCell(nmbToStr(0.0, "8,2'"))
	XFAS.AddCell('nmbToStr(123456.789, "8,2\'")')
	XFAS.AddCell('"8.2\'"')
	XFAS.AddCell(nmbToStr(123456.789, "8,2\'"))
	XFAS.AddCell('nmbToStr(-123456.789, "8,2\'")')
	XFAS.AddCell('"8.2\'"')
	XFAS.AddCell(nmbToStr(-123456.789, "8,2\'"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// 8 Vorkommastellen mit Gruppierung von 4 Ziffern getrennt durch '_'")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, "8,_4")')
	XFAS.AddCell('"8,_4"')
	XFAS.AddCell(nmbToStr(0.0, "8,_4"))
	XFAS.AddCell('nmbToStr(123456.789, "8,_4")')
	XFAS.AddCell('"8,_4"')
	XFAS.AddCell(nmbToStr(123456.789, "8,_4"))
	XFAS.AddCell('nmbToStr(-123456.789, "8,_4")')
	XFAS.AddCell('"8,_4"')
	XFAS.AddCell(nmbToStr(-123456.789, "8,_4"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Nur Vorkommastellen von links nach rechts (gesteuert durch '-') in 4'er-Gruppen getrennt durch Leerzeichen")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, ".0 -4")')
	XFAS.AddCell('".0 -4"')
	XFAS.AddCell(nmbToStr(0.0, ".0 -4"))
	XFAS.AddCell('nmbToStr(123456.789, ".0 -4")')
	XFAS.AddCell('".0 -4"')
	XFAS.AddCell(nmbToStr(123456.789, ".0 -4"))
	XFAS.AddCell('nmbToStr(-123456.789, ".0 -4")')
	XFAS.AddCell('".0 -4"')
	XFAS.AddCell(nmbToStr(-123456.789, ".0 -4"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// 10 Vorkommastellen von links nach rechts (gesteuert durch '-') in 4'er-Gruppen getrennt durch Leerzeichen")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, "10.0 -4")')
	XFAS.AddCell('"10.0 -4"')
	XFAS.AddCell(nmbToStr(0.0, "10.0 -4"))
	XFAS.AddCell('nmbToStr(123456.789, "10.0 -4")')
	XFAS.AddCell('"10.0 -4"')
	XFAS.AddCell(nmbToStr(123456.789, "10.0 -4"))
	XFAS.AddCell('nmbToStr(-123456.789, "10.0 -4")')
	XFAS.AddCell('"10.0 -4"')
	XFAS.AddCell(nmbToStr(-123456.789, "10.0 -4"))

	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// 10 Vorkommastellen von links nach rechts (gesteuert durch '-') in 4'er-Gruppen getrennt durch Leerzeichen  mit 4 Nachkommastellen")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStr(0.0, "10.4 -4")')
	XFAS.AddCell('"10.4 -4"')
	XFAS.AddCell(nmbToStr(0.0, "10.4 -4"))
	XFAS.AddCell('nmbToStr(123456.789, "10.4 -4")')
	XFAS.AddCell('"10.4 -4"')
	XFAS.AddCell(nmbToStr(123456.789, "10.4 -4"))
	XFAS.AddCell('nmbToStr(-123456.789, "10.4 -4")')
	XFAS.AddCell('"10.4 -4"')
	XFAS.AddCell(nmbToStr(-123456.789, "10.4 -4"))
}
»
/



/Demo.nmbToStrEx
«
{
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Kein Format angegeben: Alle Stellen, Standard-Delimiter '.' und keine Gruppierung")
	XFAS.AddCells('','')
	XFAS.AddCells('nmbToStrEx(0.0)')
	XFAS.AddCell('""')
	XFAS.AddCells(nmbToStrEx(0.0))
	XFAS.AddCells('nmbToStrEx(12345.67890)')
	XFAS.AddCell('""')
	XFAS.AddCells(nmbToStrEx(12345.67890))
	XFAS.AddCells('nmbToStrEx(-12345.67890)')
	XFAS.AddCell('""')
	XFAS.AddCells(nmbToStrEx(-12345.67890))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Komma als Dezimal-Trennzeichen:")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "", "", ",")')
	XFAS.AddCell('"","",""')
	XFAS.AddCell(nmbToStrEx(0.0, "", "", ","))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "", ",")')
	XFAS.AddCell('"","",""')
	XFAS.AddCell(nmbToStrEx(123456.789, "", "", ","))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "", ",")')
	XFAS.AddCell('"","",""')
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "", ","))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Nur (minimale Anzahl) Vorkommastellen erwünscht (man beachte, dass gerundet wird): ")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "8..", "0")')
	XFAS.AddCell('"8..","0",""')
	XFAS.AddCell(nmbToStrEx(0.0, "8..", "0"))
	XFAS.AddCell('nmbToStrEx(123456.789, "8..", "0")')
	XFAS.AddCell('"8..","0",""')
	XFAS.AddCell(nmbToStrEx(123456.789, "8..", "0"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "8..", "0")')
	XFAS.AddCell('"8..","0",""')
	XFAS.AddCell(nmbToStrEx(-123456.789, "8..", "0"))
	XFAS.AddCell('nmbToStrEx(123456.789, "4..", "0")')
	XFAS.AddCell('"4..","0",""')
	XFAS.AddCell(nmbToStrEx(123456.789, "4..", "0"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "4..", "0")')
	XFAS.AddCell('"4..","0",""')
	XFAS.AddCell(nmbToStrEx(-123456.789, "4..", "0"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Nur (minimale Anzahl) Vorkommastellen erwünscht (Definition von Dezimal-Trennzeichen ist unnötig/wirkungslos mit Angabe von 0 Nachkommastellen): ")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "8..", "0", ".")')
	XFAS.AddCell('"8..","0","."')
	XFAS.AddCell(nmbToStrEx(0.0, "8..", "0", "."))
	XFAS.AddCell('nmbToStrEx(123456.789, "8..", "0", ".")')
	XFAS.AddCell('"8..","0","."')
	XFAS.AddCell(nmbToStrEx(123456.789, "8..", "0", "."))
	XFAS.AddCell('nmbToStrEx(-123456.789, "8..", "0", ".")')
	XFAS.AddCell('"8..","0","."')
	XFAS.AddCell(nmbToStrEx(-123456.789, "8..", "0", "."))
	XFAS.AddCell('nmbToStrEx(123456.789, "4..", "0", ".")')
	XFAS.AddCell('"4..","0","."')
	XFAS.AddCell(nmbToStrEx(123456.789, "4..", "0", "."))
	XFAS.AddCell('nmbToStrEx(-123456.789, "4..", "0", ".")')
	XFAS.AddCell('"4..","0","."')
	XFAS.AddCell(nmbToStrEx(-123456.789, "4..", "0", "."))

	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Keine Nachkommastellen erwünscht (egal welches Dezimal-Trennzeichen verwendet wird):")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "", "0", ".")')
	XFAS.AddCell("'','0','.'")
	XFAS.AddCell(nmbToStrEx(0.0, "", "0", "."))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "0", ".")')
	XFAS.AddCell("'','0','.'")
	XFAS.AddCell(nmbToStrEx(123456.789, "", "0", "."))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "0", ".")')
	XFAS.AddCell("'','0','.'")
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "0", "."))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "0..0", ",")')
	XFAS.AddCell("'','0..0',','")
	XFAS.AddCell(nmbToStrEx(123456.789, "", "0..0", ","))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "0..0", ",")')
	XFAS.AddCell("'','0..0',','")
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "0..0", ","))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Minimale Anzahl Vorkommastellen und Dezimal-Trennzeichen definiert")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "8..", "", ",")')
	XFAS.AddCell("'8..','',''")
	XFAS.AddCell(nmbToStrEx(0.0, "8..", "", ","))
	XFAS.AddCell('nmbToStrEx(123456.789, "8..", "", ",")')
	XFAS.AddCell("'8..','',''")
	XFAS.AddCell(nmbToStrEx(123456.789, "8..", "", ","))
	XFAS.AddCell('nmbToStrEx(-123456.789, "8..", "", ",")')
	XFAS.AddCell("'8..','',''")
	XFAS.AddCell(nmbToStrEx(-123456.789, "8..", "", ","))
	XFAS.AddCell('nmbToStrEx(123456.789, "4..", "", ",")')
	XFAS.AddCell("'4.00','',''")
	XFAS.AddCell(nmbToStrEx(123456.789, "4..", "", ","))
	XFAS.AddCell('nmbToStrEx(-123456.789, "4..", "", ",")')
	XFAS.AddCell("'4..','',''")
	XFAS.AddCell(nmbToStrEx(-123456.789, "4..", "", ","))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// Tausender-Trennzeichen '")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "", "", "", "\'")')
	XFAS.AddCell("'','','','\''")
	XFAS.AddCell(nmbToStrEx(0.0, "", "", "", "\'"))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "", "", "\'")')
	XFAS.AddCell("'','','','\''")
	XFAS.AddCell(nmbToStrEx(123456.789, "", "", "", "\'"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "", ",", "\'")')
	XFAS.AddCell("'','','','\''")
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "", ",", "\'"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// 4 fixe Nachkommastellen mit Tausender-Trennzeichen '")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "", "4", "", "\'")')
	XFAS.AddCell("'','4','','\''")
	XFAS.AddCell(nmbToStrEx(0.0, "", "4", "", "\'"))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "4", "", "\'")')
	XFAS.AddCell("'','4','','\''")
	XFAS.AddCell(nmbToStrEx(123456.789, "", "4", "", "\'"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "4..4", ",", "\'")')
	XFAS.AddCell("'','4..0','','\''")
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "4..4", ",", "\'"))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// (*) Nur minimale Anzahl Nachkommastellen definiert")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "", "2..")')
	XFAS.AddCell("'','2..',''")
	XFAS.AddCell(nmbToStrEx(0.0, "", "2.."))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "2..")')
	XFAS.AddCell("'','2..',''")
	XFAS.AddCell(nmbToStrEx(123456.789, "", "2.."))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "2..", ",")')
	XFAS.AddCell("'','2..',','")
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "2..", ","))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// (*) Nur maximale Anzahl Nachkommastellen definiert")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "", "..2")')
	XFAS.AddCell("'','..2',''")
	XFAS.AddCell(nmbToStrEx(0.0, "", "..2"))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "..2")')
	XFAS.AddCell("'','..2',''")
	XFAS.AddCell(nmbToStrEx(123456.789, "", "..2"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "..2", ",")')
	XFAS.AddCell("'','..2',','")
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "..2", ","))
	// ------------------------------------------------------------------------------------------------------
	XFAS.AddCell("// (*) Minimale und maximale Anzahl Nachkommastellen definiert")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "", "1..2")')
	XFAS.AddCell("'','1..2',''")
	XFAS.AddCell(nmbToStrEx(0.0, "", "1..2"))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "1..2")')
	XFAS.AddCell("'','1..2',''")
	XFAS.AddCell(nmbToStrEx(123456.789, "", "1..2"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "1..2", ",")')
	XFAS.AddCell("'','1..2',','")
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "1..2", ","))

	XFAS.AddCell("// 8 Vorkomma- und 2 Nachkommastellen (man beachte, dass gerundet wird)")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "8..", "2", ".")')
	XFAS.AddCell("'8..','2','.'")
	XFAS.AddCell(nmbToStrEx(0.0, "8..", "2", "."))
	XFAS.AddCell('nmbToStrEx(123456.789, "8..", "2", ".")')
	XFAS.AddCell("'8..','2','.'")
	XFAS.AddCell(nmbToStrEx(123456.789, "8..", "2", "."))
	XFAS.AddCell('nmbToStrEx(-123456.789, "8..", "2", ".")')
	XFAS.AddCell("'8..','2','.'")
	XFAS.AddCell(nmbToStrEx(-123456.789, "8..", "2", "."))

	XFAS.AddCell("// 8 Vorkomma- und 2 Nachkommastellen mit Tausender-Trennzeichen '")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "8..", "2", ",", "\'")')
	XFAS.AddCell("'8..','2',',','\''")
	XFAS.AddCell(nmbToStrEx(0.0, "8..", "2", ",", "\'"))
	XFAS.AddCell('nmbToStrEx(123456.789, "8..", "2", ",", "\'")')
	XFAS.AddCell("'8..','2',',','\''")
	XFAS.AddCell(nmbToStrEx(123456.789, "8..", "2", ",", "\'"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "8..", "2", ",", "\'")')
	XFAS.AddCell("'8..','2',',','\''")
	XFAS.AddCell(nmbToStrEx(-123456.789, "8..", "2", ",", "\'"))

	XFAS.AddCell("// 8 Vorkommastellen mit Gruppierung von 4 Ziffern getrennt durch '_'")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "8..", "", ",", "_4")')
	XFAS.AddCell("'8..','',',','_4'")
	XFAS.AddCell(nmbToStrEx(0.0, "8..", "", ",", "_4"))
	XFAS.AddCell('nmbToStrEx(123456.789, "8..", "", ",", "_4")')
	XFAS.AddCell("'8..','',',','_4'")
	XFAS.AddCell(nmbToStrEx(123456.789, "8..", "", ",", "_4"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "8..", "", ",", "_4")')
	XFAS.AddCell("'8..','',',','_4'")
	XFAS.AddCell(nmbToStrEx(-123456.789, "8..", "", ",", "_4"))

	XFAS.AddCell("// Nur Vorkommastellen von links nach rechts (gesteuert durch '-') in 4'er-Gruppen getrennt durch Leerzeichen")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "", "0", "", " -4")')
	XFAS.AddCell("'','0','',' -4'")
	XFAS.AddCell(nmbToStrEx(0.0, "", "0", "", " -4"))
	XFAS.AddCell('nmbToStrEx(123456.789, "", "0", "", " -4")')
	XFAS.AddCell("'','0','',' -4'")
	XFAS.AddCell(nmbToStrEx(123456.789, "", "0", "", " -4"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "", "0", "", " -4")')
	XFAS.AddCell("'','0','',' -4'")
	XFAS.AddCell(nmbToStrEx(-123456.789, "", "0", "", " -4"))

	XFAS.AddCell("// 10 Vorkommastellen von links nach rechts (gesteuert durch '-') in 4'er-Gruppen getrennt durch Leerzeichen")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "10..", "0", "", " -4")')
	XFAS.AddCell("'10..','0','',' -4'")
	XFAS.AddCell(nmbToStrEx(0.0, "10..", "0", "", " -4"))
	XFAS.AddCell('nmbToStrEx(123456.789, "10..", "0", "", " -4")')
	XFAS.AddCell("'10..','0','',' -4'")
	XFAS.AddCell(nmbToStrEx(123456.789, "10..", "0", "", " -4"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "10..", "0", "", " -4")')
	XFAS.AddCell("'10..','0','',' -4'")
	XFAS.AddCell(nmbToStrEx(-123456.789, "10..", "0", "", " -4"))

	XFAS.AddCell("// (*) Fixe 7 Nachkommastellen ebenfalls gruppiert: Mit standardmässigen 3'er-Gruppen getrennt durch '_'")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "8..", "7", ",", "\'", ".")')
	XFAS.AddCell("'8..','7',',','\'','.'")
	XFAS.AddCell(nmbToStrEx(0.0, "8..", "7", ",", "\'", "."))
	XFAS.AddCell('nmbToStrEx(123456.789, "8..", "7", ",", "\'", ".")')
	XFAS.AddCell("'8..','7',',','\'','.'")
	XFAS.AddCell(nmbToStrEx(123456.789, "8..", "7", ",", "\'", "."))
	XFAS.AddCell('nmbToStrEx(-123456.789, "8..", "7", ",", "\'", ".")')
	XFAS.AddCell("'8..','7',',','\'','.'")
	XFAS.AddCell(nmbToStrEx(-123456.789, "8..", "7", ",", "\'", "."))

	XFAS.AddCell("// (*) Fixe 7 Nachkommastellen ebenfalls gruppiert: Mit 2'er-Gruppen getrennt durch '''")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "8..", "7", ",", "_4", "\'2")')
	XFAS.AddCell("'8..','7',',','_4','\'2'")
	XFAS.AddCell(nmbToStrEx(0.0, "8..", "7", ",", "_4", "\'2"))
	XFAS.AddCell('nmbToStrEx(123456.789, "8..", "7", ",", "_4", "\'2")')
	XFAS.AddCell("'8..','7',',','_4','\'2'")
	XFAS.AddCell(nmbToStrEx(123456.789, "8..", "7", ",", "_4", "\'2"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "8..", "7", ",", "_4", "\'2")')
	XFAS.AddCell("'8..','7',',','_4','\'2'")
	XFAS.AddCell(nmbToStrEx(-123456.789, "8..", "7", ",", "_4", "\'2"))

	XFAS.AddCell("// (*) Fixe 7 Nachkommastellen ebenfalls gruppiert: Mit 2'er-Gruppen getrennt durch Leerzeichen von rechts nach links (gesteuert durch '-')")
	XFAS.AddCells('','')
	XFAS.AddCell('nmbToStrEx(0.0, "10..", "7", "", " -4", " -2")')
	XFAS.AddCell("'10..','7','','-4','-2'")
	XFAS.AddCell(nmbToStrEx(0.0, "10..", "7", "", " -4", " -2"))
	XFAS.AddCell('nmbToStrEx(123456.789, "10..", "7", "", " -4", " -2")')
	XFAS.AddCell("'10..','7','','-4','-2'")
	XFAS.AddCell(nmbToStrEx(123456.789, "10..", "7", "", " -4", " -2"))
	XFAS.AddCell('nmbToStrEx(-123456.789, "10..", "7", "", " -4", " -2")')
	XFAS.AddCell("'10..','7','','-4','-2'")
	XFAS.AddCell(nmbToStrEx(-123456.789, "10..", "7", "", " -4", " -2"))
}
»
/





/GetInfoScript
«XFAS(head=SupportsScreenOutput)»
«XFAS(head=SupportsBoArgs)»
«XFAS(head=SupportedBoType)»
«XFAS(head=MlsKey)»
# ------------------------------------------------------------------------------------------------------
# ScreenOutput unterstützt
«XFAS(cell=1)»
# BoArgs unterstützt
«XFAS(cell=0)»
# BOTyp welcher geliefert werden soll
«XFAS(cell=)»
# Gewünschter MLS-Key - wenn nicht gefunden wird Key zurück gegeben.
«XFAS(cell=U.ScriptReport.«XCNT(arg:ScriptName)»)»
/





