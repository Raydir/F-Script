{
	"BLOCKFUNC: XRES.GetColName":	{
		"prefix":	"üîê  BlockFunc.XRES.GetColName",
		"description":	["Liefert Spalten-Namen anhand Spalten-Nummer. Fehler wenn nicht vorhanden"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetColName(${2:xResName}, ${3:oneBasedColNo})",		]
	},
	"BLOCKFUNC: XRES.GetColValByName":	{
		"prefix":	"üîê  BlockFunc.XRES.GetColValByName",
		"description":	["Liefert Wert einer Spalte anhand Spalten-Namen und Zeilen-Nummer (ohne √úbergabe Zeile 1). Fehler wenn nicht vorhanden"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetColValByName(${2:xResName}, ${3:colName}, ${4:oneBasedRowNo})",		]
	},
	"BLOCKFUNC: XRES.GetColValByNo":	{
		"prefix":	"üîê  BlockFunc.XRES.GetColValByNo",
		"description":	["Liefert Wert einer Spalte anhand Spalten-Nummer und Zeilen-Nummer (ohne √úbergabe Zeile 1). Fehler wenn nicht vorhanden"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetColValByNo(${2:xResName}, ${3:oneBasedColNo}, ${4:oneBasedRowNo})",		]
	},
	"BLOCKFUNC: XRES.GetDurationInMsec":	{
		"prefix":	"üîê  BlockFunc.XRES.GetDurationInMsec",
		"description":	["Liefert Dauer der Ausf√ºhrung in Millisekunden"],
		"body":	[
			"\tvar ${1:numberVal} := XRES.GetDurationInMsec(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetMsgKey":	{
		"prefix":	"üîê  BlockFunc.XRES.GetMsgKey",
		"description":	["Liefert Meldungs-Schl√ºssel"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetMsgKey(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetMsgText":	{
		"prefix":	"üîê  BlockFunc.XRES.GetMsgText",
		"description":	["Liefert Meldungs-Text (ohne allf√§llige UI- und Log-Meldungen)"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetMsgText(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetMsgTextFull":	{
		"prefix":	"üîê  BlockFunc.XRES.GetMsgTextFull",
		"description":	["Liefert Meldungs-Text (inkl. allf√§llige UI- und Log-Meldungen)"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetMsgTextFull(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetMsgTextLogMsg":	{
		"prefix":	"üîê  BlockFunc.XRES.GetMsgTextLogMsg",
		"description":	["Liefert in Meldungs-Text enthaltene Log-Meldungen (in JSON-Format)"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetMsgTextLogMsg(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetMsgTextUiMsg":	{
		"prefix":	"üîê  BlockFunc.XRES.GetMsgTextUiMsg",
		"description":	["Liefert in Meldungs-Text enthaltene UI-Meldungen (in JSON-Format)"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetMsgTextUiMsg(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetNmbOfCols":	{
		"prefix":	"üîê  BlockFunc.XRES.GetNmbOfCols",
		"description":	["Liefert Anzahl R√ºckgabespalten"],
		"body":	[
			"\tvar ${1:numberVal} := XRES.GetNmbOfCols(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetNmbOfRows":	{
		"prefix":	"üîê  BlockFunc.XRES.GetNmbOfRows",
		"description":	["Liefert Anzahl Zeilen"],
		"body":	[
			"\tvar ${1:numberVal} := XRES.GetNmbOfRows(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetOk":	{
		"prefix":	"üîê  BlockFunc.XRES.GetOk",
		"description":	["Liefert Info, ob Service-Ausf√ºhrung erfolgreich war"],
		"body":	[
			"\tvar ${1:boolVal} := XRES.GetOk(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.GetRedoData":	{
		"prefix":	"üîê  BlockFunc.XRES.GetRedoData",
		"description":	["Redo-Daten abholen (geliefertes Daten-Format ist 'private')"],
		"body":	[
			"\tvar ${1:stringVal} := XRES.GetRedoData(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.IsDefined":	{
		"prefix":	"üîê  BlockFunc.XRES.IsDefined",
		"description":	["Ermittelt, ob ein bestimmtes Objekt existiert."],
		"body":	[
			"\tvar ${1:boolVal} := XRES.IsDefined(${2:xResName})",		]
	},
	"BLOCKFUNC: XRES.Redo":	{
		"prefix":	"üîê  BlockFunc.XRES.Redo",
		"description":	["Service erneut ausf√ºhren und 'Erfolgreich'-Info zur√ºckgeben"],
		"body":	[
			"\tvar ${1:boolVal} := XRES.Redo(${2:xResName}, ${3:redoArgs})",		]
	},
	"BLOCKFUNC: XRES.TakeLogAndUiMsg":	{
		"prefix":	"üîê  BlockFunc.XRES.TakeLogAndUiMsg",
		"description":	["Log- und UI-Meldungen in eigene/aktuelle Response √ºbernehmen"],
		"body":	[
			"XRES.TakeLogAndUiMsg(${2:xResName})",		]
	},
}
