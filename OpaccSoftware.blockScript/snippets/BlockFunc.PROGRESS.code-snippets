{
	"BLOCKFUNC: PROGRESS.CreateJob":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.CreateJob",
		"description":	["Erzeugt einen neuen Job. Optional kann verhindert werden, dass der Abbruch verlangt werden kann."],
		"body":	[
			"PROGRESS.CreateJob(${2:name}, ${3:cancelSupported})",		]
	},
	"BLOCKFUNC: PROGRESS.CreateStep":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.CreateStep",
		"description":	["Erzeugt einen neuen Schritt. Optional kann verhindert werden, dass der Abbruch verlangt werden kann."],
		"body":	[
			"PROGRESS.CreateStep(${2:name}, ${3:cancelSupported})",		]
	},
	"BLOCKFUNC: PROGRESS.CreateStepAndWait":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.CreateStepAndWait",
		"description":	["Erzeugt einen neuen Schritt, welcher die Verarbeitung pausiert. Es sind dabei nur Zehnerschritte m√∂glich. Optional kann verhindert werden, dass der Abbruch verlangt werden kann. Retourniert TRUE wenn das Warten abgebrochen wurde."],
		"body":	[
			"\tvar ${1:boolVal} := PROGRESS.CreateStepAndWait(${2:name}, ${3:pauseInSeconds}, ${4:cancelSupported})",		]
	},
	"BLOCKFUNC: PROGRESS.GetId":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.GetId",
		"description":	["Liefert die ID des Monitor-Objekts zur√ºck."],
		"body":	[
			"\tvar ${1:numberVal} := PROGRESS.GetId()",		]
	},
	"BLOCKFUNC: PROGRESS.GetInfo":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.GetInfo",
		"description":	["Liefert den Info-Text des aktiven Progress-Objekts zur√ºck."],
		"body":	[
			"\tvar ${1:stringVal} := PROGRESS.GetInfo()",		]
	},
	"BLOCKFUNC: PROGRESS.IsActive":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.IsActive",
		"description":	["Besitzt die Ausf√ºhrung ein laufendes Monitor-Objekt?"],
		"body":	[
			"\tvar ${1:boolVal} := PROGRESS.IsActive()",		]
	},
	"BLOCKFUNC: PROGRESS.IsJobCancelRequested":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.IsJobCancelRequested",
		"description":	["Wurde beim Job der Abbruch verlangt?"],
		"body":	[
			"\tvar ${1:boolVal} := PROGRESS.IsJobCancelRequested()",		]
	},
	"BLOCKFUNC: PROGRESS.IsProcessCancelRequested":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.IsProcessCancelRequested",
		"description":	["Wurde bei der Verarbeitung der Abbruch verlangt?"],
		"body":	[
			"\tvar ${1:boolVal} := PROGRESS.IsProcessCancelRequested()",		]
	},
	"BLOCKFUNC: PROGRESS.IsStepCancelRequested":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.IsStepCancelRequested",
		"description":	["Wurde beim Schritt der Abbruch verlangt?"],
		"body":	[
			"\tvar ${1:boolVal} := PROGRESS.IsStepCancelRequested()",		]
	},
	"BLOCKFUNC: PROGRESS.IsTimeoutCancelRequested":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.IsTimeoutCancelRequested",
		"description":	["Wurde Verarbeitungs-Abbruch infolge Timeout verlangt?"],
		"body":	[
			"\tvar ${1:boolVal} := PROGRESS.IsTimeoutCancelRequested()",		]
	},
	"BLOCKFUNC: PROGRESS.Refresh":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.Refresh",
		"description":	["Frischt das Progress-Objekt auf und setzt es auf 'Running' (falls auf 'NotResponding')."],
		"body":	[
			"PROGRESS.Refresh()",		]
	},
	"BLOCKFUNC: PROGRESS.RequestCancelOfJob":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.RequestCancelOfJob",
		"description":	["Verlangt den Abbruch beim Job."],
		"body":	[
			"PROGRESS.RequestCancelOfJob()",		]
	},
	"BLOCKFUNC: PROGRESS.RequestCancelOfProcess":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.RequestCancelOfProcess",
		"description":	["Verlangt den Abbruch bei der Verarbeitung."],
		"body":	[
			"PROGRESS.RequestCancelOfProcess()",		]
	},
	"BLOCKFUNC: PROGRESS.RequestCancelOfStep":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.RequestCancelOfStep",
		"description":	["Verlangt den Abbruch beim Schritt."],
		"body":	[
			"PROGRESS.RequestCancelOfStep()",		]
	},
	"BLOCKFUNC: PROGRESS.ResetCancelRequests":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.ResetCancelRequests",
		"description":	["Setzt die verlangten Abbr√ºche beim Schritt, Job und der Verarbeitung zur√ºck."],
		"body":	[
			"PROGRESS.ResetCancelRequests()",		]
	},
	"BLOCKFUNC: PROGRESS.SetActiveId":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.SetActiveId",
		"description":	["Setzt ein laufendes Monitor-Objekt f√ºr die Ausf√ºhrung. Fehler, falls bereits ein laufendes Monitor-Objekt existiert."],
		"body":	[
			"PROGRESS.SetActiveId(${2:progressId})",		]
	},
	"BLOCKFUNC: PROGRESS.SetInfo":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.SetInfo",
		"description":	["Setzt den Info-Text des aktiven Progress-Objekts."],
		"body":	[
			"PROGRESS.SetInfo(${2:info})",		]
	},
	"BLOCKFUNC: PROGRESS.SetJobPercent":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.SetJobPercent",
		"description":	["Setzt den Fortschritts-Balken des aktiven Jobs. (Erlaubter Bereich: 0-100)"],
		"body":	[
			"PROGRESS.SetJobPercent(${2:progress})",		]
	},
	"BLOCKFUNC: PROGRESS.SetStepPercent":	{
		"prefix":	"üîê  BlockFunc.PROGRESS.SetStepPercent",
		"description":	["Setzt den Fortschritts-Balken des aktiven Schritts (Erlaubter Bereich: 0-100)."],
		"body":	[
			"PROGRESS.SetStepPercent(${2:progress})",		]
	},
}
